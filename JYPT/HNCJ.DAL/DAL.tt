<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="EF.Utility.CS.ttinclude"#><#@ output extension=".cs" #>
<#
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader=new MetadataLoader(this);
CodeRegion region=new CodeRegion(this,1);
MetadataTools ef = new MetadataTools(this);
string inputFile=@"..\\HNCJ.Model\\DataModel.edmx";
EdmItemCollection ItemCollection=loader.CreateEdmItemCollection(inputFile);
string namespaceName=code.VsNamespaceSuggestion();
var	fileManager = EntityFrameworkTemplateFileManager.Create(this);
#>
using HNCJ.IDAL;
using HNCJ.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
namespace HNCJ.DAL
{
	<#

	foreach (var entity in ItemCollection.GetItems<EntityType>().OrderBy(e=>e.Name))
	{
	#>
	
	public partial class <#=entity.Name#>Dal:BaseDal<<#=entity.Name#>>,I<#=entity.Name#>Dal
	{
		public override bool Update(<#=entity.Name#> entity)
			{
				try
				{
					var oldentity = db.Set<<#=entity.Name#>>().Single(p => p.ID == entity.ID);
					db.Entry(oldentity).CurrentValues.SetValues(entity);
				}
				catch(Exception e){
					throw e;
				}
				return true ;
			}
	}

	<#
	}
	#>

}